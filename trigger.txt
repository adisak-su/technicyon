--
-- Triggers `technicalname`
--
DELIMITER $$
CREATE TRIGGER `After Insert Technical` AFTER INSERT ON `technicalname` FOR EACH ROW BEGIN
    SET @technicalNo = NEW.technicalNo;
    SET @technicalname = NEW.technicalname;
    SET @updatedAt = NEW.updatedAt;
    SET @rowData = JSON_OBJECT('technicalNo', @technicalNo,'technicalname', @technicalname,'updatedAt', @updatedAt);
    
    # INSERT INTO data_changes(table_name, record_id, action, changed_at, data_after)
    # VALUES ('technicalnames', NEW.technicalNo, "CREATE", NOW(), @rowData);
    
    UPDATE tablestatus SET insertTime = NEW.updatedAt WHERE tableName = 'technicalname';
    
END
$$
DELIMITER ;
DELIMITER $$
CREATE TRIGGER `After Delete Technical` AFTER DELETE ON `technicalname` FOR EACH ROW BEGIN
    # INSERT INTO data_changes(table_name, record_id, action, changed_at)
    # VALUES ('technicalnames', OLD.technicalNo, "DELETE", NOW());
    
    UPDATE usercar_head SET technicalname = "" WHERE technicalname = OLD.technicalname;

    UPDATE tablestatus SET updateTime = NEW.updatedAt WHERE tableName = 'technicalname';

END
$$
DELIMITER ;
DELIMITER $$
CREATE TRIGGER `After Update Technical` AFTER UPDATE ON `technicalname` FOR EACH ROW BEGIN
    SET @technicalNo_old = OLD.technicalNo;
    SET @technicalNo = NEW.technicalNo;
    SET @technicalname = NEW.technicalname;
    SET @updatedAt = NEW.updatedAt;
    SET @rowData = JSON_OBJECT('technicalNo', @technicalNo,'technicalname', @technicalname,'updatedAt', @updatedAt);
    
    # INSERT INTO data_changes(table_name, record_id, action, changed_at, data_after)
    # VALUES ('technicalnames', OLD.technicalNo, "UPDATE", NOW(), @rowData);
    
    UPDATE usercar_head SET technicalname = NEW.technicalname WHERE technicalname = OLD.technicalname;
    
    UPDATE tablestatus SET updateTime = NEW.updatedAt WHERE tableName = 'technicalname';

END
$$
DELIMITER ;