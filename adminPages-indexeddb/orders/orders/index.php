<?php
// require_once("sidebar.php");
?>
<!DOCTYPE html>
<html lang="th">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢ POS</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

    <!-- <link rel="stylesheet" href="sidebar.css" /> -->
    <link rel="stylesheet" href="../includes/sidebar/sidebar.css" />

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å */
        body {
            background: #f0f3ff;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .btn-background {
            background: linear-gradient(to right, #6a82fb, #fc5c7d);
        }

        .btn-background-primary {
            background: #6a82fb;
            color: white;
        }


        .product-card {
            background: white;
            border-radius: 10px;
            padding: 10px;
            text-align: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .badge-category {
            border-radius: 20px;
            padding: 6px 15px;
            margin: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .badge-category:hover {
            transform: scale(1.05);
        }

        .product-icon {
            font-size: 32px;
            margin-bottom: 10px;
        }

        .product-name {
            font-weight: bold;
        }

        .product-price {
            color: #dc3545;
            font-weight: bold;
        }

        .product-id {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .category-section {
            display: flex;
            flex-wrap: wrap;
            margin-bottom: 15px;
        }

        @media (max-width: 767.98px) {
            .main h4 {
                font-size: 1.2rem;
            }

            .category-section {
                justify-content: center;
            }
        }

        /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô Order */
        .order-container {
            background: #fff;
            border-radius: 10px;
            padding: 15px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .order-header {
            background: linear-gradient(to right, #6a82fb, #fc5c7d);
            color: white;
            border-radius: 8px;
            padding: 10px 15px;
            margin-bottom: 15px;
        }

        .order-item {
            transition: background-color 0.3s;
            padding: 10px 15px;
        }

        .order-item:hover {
            background-color: #f8f9fa;
        }

        .order-list {
            flex-grow: 1;
            overflow-y: auto;
            max-height: 300px;
            margin-bottom: 15px;
            border: 1px solid #eee;
            border-radius: 8px;
        }

        .order-summary {
            border-top: 2px dashed #eee;
            padding-top: 15px;
            margin-top: auto;
        }

        .btn-pay {
            background: #00c896;
            color: white;
            font-size: 18px;
            font-weight: bold;
            transition: all 0.3s;
            padding: 10px;
            border-radius: 8px;
            border: none;
            margin-top: 15px;
        }

        .btn-pay:hover {
            background: #00a87c;
            transform: scale(1.02);
        }

        .order-meta {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 10px;
            margin-bottom: 15px;
        }

        .order-empty {
            text-align: center;
            padding: 30px 15px;
            color: #6c757d;
        }

        .order-empty i {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.3;
        }

        .order-controls {
            display: flex;
            gap: 5px;
            margin-top: 8px;
        }

        .order-controls button {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
        }

        .discount-input-group {
            margin-bottom: 15px;
        }

        .grand-total {
            font-size: 1.3rem;
            font-weight: bold;
            color: #28a745;
        }

        .api-status {
            position: fixed;
            top: 10px;
            right: 10px;
            padding: 10px 15px;
            border-radius: 5px;
            z-index: 2000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        @media (max-width: 767.98px) {
            .order-container {
                margin-top: 15px;
            }
        }
    </style>
</head>

<body>

    <!-- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ API -->
    <div id="api-status" class="api-status d-none"></div>

    <!-- Sidebar -->
    <!-- <?php //include_once("sidebar.php"); ?> -->
    <?php include_once("../includes/sidebar/sidebar.php"); ?>

    <div class="main main-content" id="main-content">
        <div class="row">
            <!-- ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ -->
            <div class="col-md-8">
                <input type="text" id="search-input" class="form-control mb-2" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤..." oninput="filterProducts()">
                <div class="category-section" id="category-list">
                    <!-- ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ JavaScript -->
                </div>

                <div class="row mt-3" id="product-list"></div>
            </div>

            <!-- ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ -->
            <div class="col-md-4">
                <!-- ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ -->
                <div id="order-container" class="order-container">
                    <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ Order UI -->
                </div>
            </div>
        </div>
    </div>
    <!-- </div> -->

    <!-- ‡πÑ‡∏ü‡∏•‡πå JavaScript ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™ Order -->
    <script src="../includes/sidebar/sidebar.js"></script>
    <script src="../includes/common.js"></script>
    <script src="orderComponent.js"></script>

    <script>
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà

        function updateThaiDate() {
            const inputDate = document.getElementById('order-date').value;
            document.getElementById('thai-date').value = getThaiDate(inputDate);
            // if (!inputDate) return;
            // document.getElementById('thai-date').value = getThaiDate(inputDate);
        }
        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô - ‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å
        // setActiveMenu('stock/adjust');
        // setActiveMenu('orders');

    </script>

    <!-- ‡πÑ‡∏ü‡∏•‡πå JavaScript ‡∏´‡∏•‡∏±‡∏Å -->
    <script>
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        const categories = [{
                id: 1,
                name: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                icon: 'üì¶'
            },
            {
                id: 2,
                name: '‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
                icon: 'üçî'
            },
            {
                id: 3,
                name: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°',
                icon: 'ü•§'
            },
            {
                id: 4,
                name: '‡∏Ç‡∏ô‡∏°',
                icon: 'üç∞'
            },
            {
                id: 5,
                name: '‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ',
                icon: 'üß¥'
            }
        ];

        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        const products = [{
                id: 101,
                name: '‡∏ä‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß',
                price: 18,
                categoryId: 3,
                icon: 'üçµ',
                stock: 50
            },
            {
                id: 102,
                name: '‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î',
                price: 40,
                categoryId: 2,
                icon: 'üçó',
                stock: 30
            },
            {
                id: 103,
                name: '‡∏õ‡πä‡∏≠‡∏õ‡∏Ñ‡∏≠‡∏£‡πå‡∏ô',
                price: 25,
                categoryId: 4,
                icon: 'üçø',
                stock: 40
            },
            {
                id: 104,
                name: '‡∏ä‡∏≤‡∏ô‡∏°‡πÑ‡∏Ç‡πà‡∏°‡∏∏‡∏Å',
                price: 35,
                categoryId: 3,
                icon: 'üßã',
                stock: 45
            },
            {
                id: 105,
                name: '‡∏Å‡∏≤‡πÅ‡∏ü',
                price: 30,
                categoryId: 3,
                icon: '‚òï',
                stock: 60
            },
            {
                id: 106,
                name: '‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤',
                price: 120,
                categoryId: 2,
                icon: 'üçï',
                stock: 25
            },
            {
                id: 107,
                name: '‡∏™‡πâ‡∏°‡∏ï‡∏≥',
                price: 50,
                categoryId: 2,
                icon: 'ü•ó',
                stock: 35
            },
            {
                id: 108,
                name: '‡πÇ‡∏î‡∏ô‡∏±‡∏ó',
                price: 20,
                categoryId: 4,
                icon: 'üç©',
                stock: 55
            },
            {
                id: 109,
                name: '‡∏ô‡πâ‡∏≥‡πÄ‡∏õ‡∏•‡πà‡∏≤',
                price: 10,
                categoryId: 3,
                icon: 'üíß',
                stock: 100
            },
            {
                id: 110,
                name: '‡∏™‡∏ö‡∏π‡πà',
                price: 10,
                categoryId: 5,
                icon: 'üßº',
                stock: 70
            }
        ];

        // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global
        let currentOrder;
        let selectedCategoryId = 1; // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ API
        function showApiStatus(message, type) {
            const statusEl = document.getElementById('api-status');
            statusEl.textContent = message;
            statusEl.className = `api-status alert alert-${type}`;
            statusEl.classList.remove('d-none');

            // ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setTimeout(() => {
                statusEl.classList.add('d-none');
            }, 3000);
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏≥‡∏•‡∏≠‡∏á API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order
        function mockOrderAPI() {
            return new Promise((resolve) => {
                // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                setTimeout(() => {
                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                    const orderData = {
                        orderNumber: "#API-20240515-001",
                        items: [{
                                id: 102,
                                quantity: 2
                            }, // ‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î 2 ‡∏ä‡∏¥‡πâ‡∏ô
                            {
                                id: 104,
                                quantity: 1
                            } // ‡∏ä‡∏≤‡∏ô‡∏°‡πÑ‡∏Ç‡πà‡∏°‡∏∏‡∏Å 1 ‡πÅ‡∏Å‡πâ‡∏ß
                        ],
                        discountAmount: 5.00,
                        taxRate: 0.07
                    };
                    resolve(orderData);
                }, 1500);
            });
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô (‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å)
        // function payOrder() {
        const payOrder = () => {
            if (!currentOrder.hasItems()) {
                Swal.fire('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', 'warning');
                return;
            }

            Swal.fire({
                title: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô?',
                html: `<p>‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: <b>‡∏ø${currentOrder.getGrandTotal().toFixed(2)}</b></p>
             <p>‡∏ö‡∏¥‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: <b>${currentOrder.orderNumber}</b></p>`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á',
                cancelButtonText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
                confirmButtonColor: '#00c896'
            }).then((result) => {
                if (result.isConfirmed) {
                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á order ‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à
                    currentOrder.createNewOrder();

                    Swal.fire({
                        title: '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
                        text: `‡∏ö‡∏¥‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ${currentOrder.orderNumber} ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`,
                        icon: 'success',
                        confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á',
                        confirmButtonColor: '#00c896'
                    });
                }
            });
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
        function toggleOrderBox() {
            const orderBox = document.getElementById('order-box');
            if (orderBox) orderBox.classList.toggle('show');
        }

        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ ID
        function setCategory(categoryId) {
            selectedCategoryId = categoryId;
            renderCategories();
            filterProducts();
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        function renderCategories() {
            const container = document.getElementById('category-list');
            container.innerHTML = '';

            categories.forEach(category => {
                const isActive = category.id === selectedCategoryId;
                const badge = document.createElement('span');
                badge.className = `badge badge-${isActive ? 'primary' : 'light'} badge-category ${isActive ? 'active' : ''}`;
                badge.innerHTML = `${category.icon} ${category.name}`;
                badge.onclick = () => setCategory(category.id);
                container.appendChild(badge);
            });
        }

        // ‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        function filterProducts() {
            const search = document.getElementById('search-input').value.toLowerCase();
            const list = document.getElementById('product-list');
            list.innerHTML = '';

            const filtered = products.filter(p => {
                const matchCategory = selectedCategoryId === 1 || p.categoryId === selectedCategoryId;
                const matchSearch = p.name.toLowerCase().includes(search);
                return matchCategory && matchSearch;
            });

            if (filtered.length === 0) {
                list.innerHTML = `<div class="col-12 text-center text-muted py-4">
                          <i class="fas fa-search fa-2x mb-2"></i>
                          <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
                        </div>`;
                return;
            }

            filtered.forEach(p => {
                const col = document.createElement('div');
                col.className = 'col-sm-4 col-6 mb-3';
                col.innerHTML = `
                    <div class="product-card" onclick="addToCart(${p.id})">
                    <div class="product-icon">${p.icon || 'üõí'}</div>
                    <div class="product-name">${p.name}</div>
                    <div class="product-id">ID: ${p.id}</div>
                    <div class="product-price">‡∏ø${p.price.toFixed(2)}</div>
                    <small class="text-muted">${categories.find(c => c.id === p.categoryId)?.name || '‡∏≠‡∏∑‡πà‡∏ô‡πÜ'}</small>
                    </div>`;
                list.appendChild(col);
            });
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ productId
        function addToCart(productId) {
            currentOrder.addItem(productId);

            // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            const productCard = event.currentTarget;
            productCard.classList.add('animate__animated', 'animate__pulse');
            setTimeout(() => {
                productCard.classList.remove('animate__animated', 'animate__pulse');
            }, 500);
        }

        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏ß‡∏•‡∏≤
        function updateTime() {
            const now = new Date();
            document.getElementById('time').textContent = now.toLocaleTimeString();
        }

        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        function updateDate() {
            const days = ['‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå', '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå', '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£', '‡∏û‡∏∏‡∏ò', '‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ', '‡∏®‡∏∏‡∏Å‡∏£‡πå', '‡πÄ‡∏™‡∏≤‡∏£‡πå'];
            const months = ['‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô',
                '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô', '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'
            ];

            const now = new Date();
            const dayName = days[now.getDay()];
            const date = now.getDate();
            const monthName = months[now.getMonth()];
            const year = now.getFullYear() + 543;

            document.getElementById('date-display').textContent =
                `‡∏ß‡∏±‡∏ô${dayName}‡∏ó‡∏µ‡πà ${date} ${monthName} ${year}`;
        }

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
        async function initialize() {
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á order ‡πÉ‡∏´‡∏°‡πà
            // currentOrder = new Order();
            currentOrder = new Order(payOrder);

            // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î
            showApiStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏à‡∏≤‡∏Å API...', 'info');

            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏à‡∏≤‡∏Å API
            try {
                // ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏£‡∏¥‡∏á: const orderData = await fetch('/api/current-order').then(res => res.json());
                const orderData = await mockOrderAPI();

                // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô order
                currentOrder.loadFromData(orderData);

                // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                showApiStatus('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡∏à‡∏≤‡∏Å API ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', 'success');
            } catch (error) {
                console.error('Failed to load order data:', error);
                showApiStatus('‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• order ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'danger');
            }

            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
            updateTime();
            updateDate();
            setInterval(updateTime, 1000);

            // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            renderCategories();
            filterProducts();

            // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö order
            const orderContainer = document.getElementById('order-container');
            currentOrder.setContainer(orderContainer);

            // ‡∏õ‡∏¥‡∏î sidebar ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å
            document.getElementById('main-content').addEventListener('click', function() {
                if (document.getElementById('sidebar').classList.contains('show')) {
                    closeSidebar();
                }
            });
        }

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
        window.addEventListener('DOMContentLoaded', initialize);
        
    </script>
    <!-- <script>
        setActiveMenu('../orders/index.php');
    </script> -->
</body>

</html>